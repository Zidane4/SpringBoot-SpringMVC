<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--增强(事务)的属性的配置-->
    <!--isolation:DEFAULT:事务的隔离级别-->
    <!--propagation:事务的传播行为-->
    <!--read-only:false.不是只读-->
    <!--timeout:-1-->
    <!--no-rollback-for:发生哪些异常不回滚-->
    <!--rollback-for:发生哪些异常回滚事务-->

    <!--transaction-manager为事务管理器，这里不配置也可以，默认为transactionManager-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager"> <!--事务增强-->
        <tx:attributes>
            <!--Propagation.REQUIRED, isolation = Isolation.READ_COMMITTED, rollbackFor = Exception.class-->
            <tx:method name="create*" propagation="SUPPORTS" read-only="true"></tx:method>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"></tx:method>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"></tx:method>
            <tx:method name="*" propagation="REQUIRED" rollback-for="Exception"></tx:method>
        </tx:attributes>
    </tx:advice>

    <!--设置切面，advisor(切面) = advice(增强) + pointcut(切点)-->
    <aop:config>
        <aop:pointcut id="allManagerMethod"
                      expression="execution (* com.zidane.spring.dao.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="allManagerMethod" order="0"/>
    </aop:config>

    <!--tx:annotation-driven 配置了，说明就可以在代码里直接使用注解了(@Transactional)，此处用的xml配置事务，所以可以不用声明了-->
    <!--<tx:annotation-driven transaction-manager="transactionManager" />-->
    <!--例子-->
    <!--@Transactional(propagation = Propagation.REQUIRED)
    public boolean insert(PriceDayPriceDO priceDay) {
    return priceDayPriceDAO.insert(priceDay);
    }-->
</beans>